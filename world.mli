(* The overall map of the game *)
type map

(* Makes up each section of the map *)
type tile

(* The possible terrain features that can exist on a tile *)
type terrain

(* The possible natural features of a tile *)
type feature

(* The possible elevations of a tile *)
type elevation

(* The possible resources present on a tile *)
type resource

(* The possible improvements that can be made to a tile *)
type improvement


(* [generate_map] creates a new map *)
val generate_map : map

(* [get_tile] gets the tile at the specified cooridnates on the given map. *)
val get_tile : map -> int -> int -> tile

(* [map_dimensions map] returns the number of columns and rows in [map]. *)
val map_dimensions : map -> int * int

(* [resource tile] returns [Some resource] if [tile] contains resource.
 * Returns None otherwise. *)
val resource : tile -> resource option

(* [feature tile] returns [Some feature] if [tile] has feature.
 * Returns None otherwise. *)
val feature : tile -> feature option

(* [gold_gen tile] returns how much gold is generated by the tile per turn. *)
val gold_gen : tile -> int

(* [food_gen tile] returns how much food is generated by the tile per turn. *)
val food_gen : tile -> int

(* [production_gen tile] returns how much production is generated by the tile per turn. *)
val production_gen : tile -> int

(* [improvement tile] returns [Some improvement] if the tile contains improvement.
 * Returns None otherwise. *)
val improvement : tile -> improvement option

(* [terrain tile] returns the terrain of the tile. *)
val terrain : tile -> terrain
